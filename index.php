<?php

echo '<h1>Решение задач на работу с массивами в PHP</h1>';

echo '1. Базовые операции над массивами <br>';
$arr = ['a', 'b', 'c', 'd', 'e'];
echo '1.1 Вывести на экран строку \'a+b, c+d\' <br>';
echo $arr[0] . "+" . $arr[1] . ", " . $arr[2] . "+" . $arr[3] . "<br>";

echo '1.2 Создайте массив $arr с элементами 2, 5, 3, 9. Умножьте первый элемент массива
на второй, а третий элемент на четвертый. Результаты сложите, присвойте переменной $result.
Выведите на экран значение этой переменной. <br>';
$arr = [2, 5, 3, 9];
$result = ($arr[0] * $arr[1]) + ($arr[2] * $arr[3]);
echo $result . "<br>";

echo '1.3 Сумма элементов массива: <br>';
$arr = ['a'=> 1, 'b'=> 2, 'c'=> 3];
echo array_sum($arr) . "<br> <br>";

echo '2. Заполнить массив длины n нулями и единицами, при этом данные значения
чередуются, начиная с нуля <br>';
// n = 7
$arr = [];
for($i = 0; $i < 7; $i++){
    if($i % 2 == 0){
        $arr[] = 0;
    }else{
        $arr[] = 1;
    }
}
echo "<pre>";
var_dump($arr);
echo "</pre> <br>";

echo '3. Cоздать массив из n чисел, каждый элемент которого равен квадрату своего номера <br>';
// n = 7
$arr = [];
for($i = 0; $i < 7; $i++){
    $arr[] = pow($i, 2);
}

echo "<pre>";
var_dump($arr);
echo "</pre> <br>";

echo '4. Найдите сумму и произведение элементов массива. Реализовать двумя способами:
с помощью стандартных функций и без $arr=[2, 1, 5, 8, 10, 3] <br>';
$arr = [2, 1, 5, 8, 10, 3];
// Стандартные функции - array_sum и array_product
$sum = 0;
$product = 1;
$size = sizeof($arr);
for($i = 0; $i < $size; $i++){
    $sum += $arr[$i]; 
    $product *= $arr[$i];
} 
echo "Сумма = " . $sum . " Произведение = " . $product . "<br>";

echo '<br> 5. Определите, есть ли в массиве повторяющиеся элементы
$arr=[2, 1, 5, 8, 10, 3, 10]<br>';
$arr=[2, 1, 5, 8, 10, 3, 10];
$flag = false; 

foreach(array_count_values($arr) as $key => $value){
    if($value > 1){
        $flag = true;
    }
}

if($flag == true){
    echo "Повторяющиеся эл-ты есть <br>";
}else{
    echo "Нет повторов <br>";
}

echo '<br> 6. Поменять местами наибольший и наименьший элементы массива <br>';
$arr=[2, 1, 5, 8, 10, 3, 11];
// Вариант без использования min() и max()
$min = 0;
$max = 0;
$size = sizeof($arr);

for($i = 0; $i < $size; $i++){
    if($arr[$i] < $min or $min === 0){
        $min = $arr[$i];
    }

    if($arr[$i] > $max or $max === 0){
        $max = $arr[$i];
    }
}

echo "Минимальный = " . $min . " Максимальный = " . $max . "<br>";

echo '<br> 7. Упорядочить значения массива по возрастанию. Реализовать двумя способами:
с помощью стандартной функции и без $arr=[2, 1, 5, 8, 10, 3, 11] <br> <br>';
$arr=[2, 1, 5, 8, 4, 3, 11];
//Стандартная функция - sort($arr);

// Реализация быстрой сортировки
qsort($arr);
/*
* Функция вычисляет количество элементов,
* тем самым подготавливая параметры для первого запуска,
* и запускает сам процесс.
*/

function qsort(&$arr){

    $left = 0;
    $right = count($arr) - 1;

    my_sort($arr, $left, $right);
}

/*
* Функция, непосредственно производящая сортировку.
* Так как массив передается по ссылке, ничего не возвращает.
*/

function my_sort(&$arr, $left, $right){

    //Создаем копии пришедших переменных, с которыми будем манипулировать в дальнейшем.
    $l = $left;
    $r = $right;

    //Вычисляем 'центр', на который будем опираться. Берем значение ~центральной ячейки массива.
    $center = $arr[(int)($left + $right) / 2];

    //Цикл, начинающий саму сортировку
    do {
        //Ищем значения больше 'центра'
        while($arr[$r] > $center){
            $r--;
        }
        // $arr=[2, 1, 5, 8, 4, 3, 11];

        //Ищем значения меньше 'центра'
        while($arr[$l] < $center){
            $l++;
        }

        //После прохода циклов проверяем счетчики циклов
        if($l <= $r){
            //И если условие true, то меняем ячейки друг с другом.
            list($arr[$r], $arr[$l]) = array($arr[$l], $arr[$r]);

            //И переводим счетчики на следующий элементы
            $l++;
            $r--;
        }
        //Повторяем цикл, если true
    }while($l <= $r);

    if($r > $left){
        //Если условие true, совершаем рекурсию
        //Передаем массив, исходное начало и текущий конец
        my_sort($arr, $left, $r);
    }

    if($l < $right){
        //Если условие true, совершаем рекурсию
        //Передаем массив, текущие начало и конец
        my_sort($arr, $l, $right);
    }
    //Сортировка завершена
}

echo '8. Удалите в массиве повторы значений. Например, для массива 1 2 4 4 2 5 результатом
будет 1 2 4 5';
$arr = [1, 2, 4, 4, 2, 5];
echo "<pre>";
var_dump(array_unique($arr));
echo "</pre> <br>";

/*echo '9. Дан массив размера n. После каждого отрицательного элемента массива вставить
элемент c нулевым значением <br>';
$arr = [-9, 8, 2, 0, 7, -3, -8, 11];
$size = sizeof($arr);

echo "<pre>";
var_dump($arr);
echo "</pre>";*/

echo '10. Вывести повторяющиеся значения массива $arr = [1, 6, 9, -4, 0, 3, 9, 0, 2] <br>';
$arr = [1, 6, 9, -4, 0, 3, 9, 0, 2];
foreach(array_count_values($arr) as $key => $value){
    if($value >= 2 ){
        echo $key . " ";
    }
}

echo '<br> 11. Создать html-меню из многомерного ассоциативного массива <br>';
$arr = [
    'php' => [
        'laravel',
        'symfony',
        'yii2'
    ],

    'python' => [
        'django',
        'flask',
        'pyramid'
    ],

    'javascript' => [
        'react',
        'angular',
        'viewjs'
    ]
];

foreach($arr as $key => $value){
    echo "<div style=\"display: inline-block; padding-right: 100px\">";
    echo "$key";
    foreach($value as $elem){
        echo "<ul>
        <li>" . $elem . "</li>
        </ul>";
    }
    echo "</div>";
}
